<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Platforms</title>
    <link>/docs/platforms/</link>
    <description>Recent content in Platforms on </description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/docs/platforms/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Kubernetes</title>
      <link>/docs/platforms/kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/platforms/kubernetes/</guid>
      <description>
        
        
        &lt;p&gt;This section of documentation covers use of the vanilla &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;
orchestrator. We support Kubernetes versions 1.11 and upwards.&lt;/p&gt;
&lt;h2 id=&#34;kubernetes-with-storageos&#34;&gt;Kubernetes with StorageOS&lt;/h2&gt;
&lt;p&gt;StorageOS integrates transparently with Kubernetes. The user can provide
standard PVC definitions and StorageOS will dynamically provision them.
StorageOS presents volumes to containers with standard POSIX mount targets.
This enables the Kubelet to mount StorageOS volumes using standard linux device
files. Checkout &lt;a href=&#34;/docs/prerequisites/systemconfiguration/&#34;&gt;device presentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Kubernetes and StorageOS communicate with each other to perform actions such as
creation, deletion or mounting of volumes. The CSI (Container Storage
Interface) driver is the standard communication method. Using CSI, Kubernetes
and StorageOS communicate over a Unix domain socket.&lt;/p&gt;
&lt;p&gt;It is recommended the use of a CSI StorgeOS installation from Kubernetes 1.13
onwards. Even though the former communication procedure, the native driver, is
still in use and StorageOS maintains support for it. Its use is discouraged as
it is a deprecated method, to be removed in newer versions of Kubernetes.&lt;/p&gt;
&lt;h2 id=&#34;csi-container-storage-interface-note&#34;&gt;CSI (Container Storage Interface) Note&lt;/h2&gt;
&lt;p&gt;CSI is the standard method of communication that enables storage drivers to
release on their own schedule. This allows storage vendors to upgrade, update,
and enhance their drivers without the need to update Kubernetes source code, or
follow Kubernetes release cycles.&lt;/p&gt;
&lt;p&gt;CSI is available from Kubernetes 1.9 alpha. CSI is considered GA from
Kubernetes 1.13, hence StorageOS recommends the use of CSI. In addition, the
StorageOS Cluster Operator handles the configuration of the CSI driver and its
complexity by detecting the version of the Kubernetes installed.&lt;/p&gt;
&lt;p&gt;Check out the status of the CSI release cycle in relation with Kubernetes in
the &lt;a href=&#34;https://kubernetes-csi.github.io/docs/&#34;&gt;CSI project&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;CSI communication is fully supported by StorageOS if the cluster is deployed
with any &lt;a href=&#34;/docs/prerequisites/systemconfiguration#distribution-specifics&#34;&gt;supported Linux
Distribution&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: EKS</title>
      <link>/docs/platforms/aws-eks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/platforms/aws-eks/</guid>
      <description>
        
        
        &lt;p&gt;This section of documentation covers the use of the managed Kubernetes AWS
service &lt;a href=&#34;https://aws.amazon.com/eks/&#34;&gt;EKS&lt;/a&gt;. For information on the installation
of StorageOS with vanilla Kubernetes in AWS VMs, please refer to the
&lt;a href=&#34;/docs/platforms/kubernetes/install/&#34;&gt;Kubernetes standard installation&lt;/a&gt; procedure.&lt;/p&gt;
&lt;h2 id=&#34;eks-and-storageos&#34;&gt;EKS and StorageOS&lt;/h2&gt;
&lt;p&gt;EKS deployment of Kubernetes uses AWS Linux by default with an optimized
kernel. As the requisite kernel modules are not available for StorageOS to use
TCMU, FUSE will be used as a fallback.&lt;/p&gt;
&lt;h2 id=&#34;kubernetes-upgrades&#34;&gt;Kubernetes Upgrades&lt;/h2&gt;
&lt;p&gt;Currently upgrading the Kubernetes version on
&lt;strong&gt;is not supported&lt;/strong&gt;. This is because nodes are replaced rather than being upgraded
in place. As such manual relocation of data and etcd members is required. We
are working with the  team to improve the
upgrade process to create a better user experience.&lt;/p&gt;
&lt;h2 id=&#34;kubernetes-with-storageos&#34;&gt;Kubernetes with StorageOS&lt;/h2&gt;
&lt;p&gt;StorageOS integrates transparently with Kubernetes. The user can provide
standard PVC definitions and StorageOS will dynamically provision them.
StorageOS presents volumes to containers with standard POSIX mount targets.
This enables the Kubelet to mount StorageOS volumes using standard linux device
files. Checkout &lt;a href=&#34;/docs/prerequisites/systemconfiguration/&#34;&gt;device presentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Kubernetes and StorageOS communicate with each other to perform actions such as
creation, deletion or mounting of volumes. The CSI (Container Storage
Interface) driver is the standard communication method. Using CSI, Kubernetes
and StorageOS communicate over a Unix domain socket.&lt;/p&gt;
&lt;p&gt;It is recommended the use of a CSI StorgeOS installation from Kubernetes 1.13
onwards. Even though the former communication procedure, the native driver, is
still in use and StorageOS maintains support for it. Its use is discouraged as
it is a deprecated method, to be removed in newer versions of Kubernetes.&lt;/p&gt;
&lt;h2 id=&#34;csi-container-storage-interface-note&#34;&gt;CSI (Container Storage Interface) Note&lt;/h2&gt;
&lt;p&gt;CSI is the standard method of communication that enables storage drivers to
release on their own schedule. This allows storage vendors to upgrade, update,
and enhance their drivers without the need to update Kubernetes source code, or
follow Kubernetes release cycles.&lt;/p&gt;
&lt;p&gt;CSI is available from Kubernetes 1.9 alpha. CSI is considered GA from
Kubernetes 1.13, hence StorageOS recommends the use of CSI. In addition, the
StorageOS Cluster Operator handles the configuration of the CSI driver and its
complexity by detecting the version of the Kubernetes installed.&lt;/p&gt;
&lt;p&gt;Check out the status of the CSI release cycle in relation with Kubernetes in
the &lt;a href=&#34;https://kubernetes-csi.github.io/docs/&#34;&gt;CSI project&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;CSI communication is fully supported by StorageOS if the cluster is deployed
with any &lt;a href=&#34;/docs/prerequisites/systemconfiguration#distribution-specifics&#34;&gt;supported Linux
Distribution&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: AKS</title>
      <link>/docs/platforms/azure-aks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/platforms/azure-aks/</guid>
      <description>
        
        
        &lt;p&gt;This section of documentation covers the use of the managed Kubernetes Azure
service &lt;a href=&#34;https://azure.microsoft.com/en-gb/services/kubernetes-service/&#34;&gt;AKS&lt;/a&gt;.
For information on the installation of StorageOS with vanilla Kubernetes in Azure
VMs, please refer to the &lt;a href=&#34;/docs/platforms/kubernetes/install/&#34;&gt;Kubernetes standard installation&lt;/a&gt; procedure.&lt;/p&gt;
&lt;h2 id=&#34;aks-and-storageos&#34;&gt;AKS and StorageOS&lt;/h2&gt;
&lt;p&gt;AKS deployment of Kubernetes uses Ubuntu by default with an optimized kernel.
All versions of Ubuntu with a kernel version later than&lt;code&gt;4.15.0-1029-azure&lt;/code&gt;
meet the StorageOS prerequisites.&lt;/p&gt;
&lt;h2 id=&#34;kubernetes-upgrades&#34;&gt;Kubernetes Upgrades&lt;/h2&gt;
&lt;p&gt;Currently upgrading the Kubernetes version on
&lt;strong&gt;is not supported&lt;/strong&gt;. This is because nodes are replaced rather than being upgraded
in place. As such manual relocation of data and etcd members is required. We
are working with the  team to improve the
upgrade process to create a better user experience.&lt;/p&gt;
&lt;h2 id=&#34;kubernetes-with-storageos&#34;&gt;Kubernetes with StorageOS&lt;/h2&gt;
&lt;p&gt;StorageOS integrates transparently with Kubernetes. The user can provide
standard PVC definitions and StorageOS will dynamically provision them.
StorageOS presents volumes to containers with standard POSIX mount targets.
This enables the Kubelet to mount StorageOS volumes using standard linux device
files. Checkout &lt;a href=&#34;/docs/prerequisites/systemconfiguration/&#34;&gt;device presentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Kubernetes and StorageOS communicate with each other to perform actions such as
creation, deletion or mounting of volumes. The CSI (Container Storage
Interface) driver is the standard communication method. Using CSI, Kubernetes
and StorageOS communicate over a Unix domain socket.&lt;/p&gt;
&lt;p&gt;It is recommended the use of a CSI StorgeOS installation from Kubernetes 1.13
onwards. Even though the former communication procedure, the native driver, is
still in use and StorageOS maintains support for it. Its use is discouraged as
it is a deprecated method, to be removed in newer versions of Kubernetes.&lt;/p&gt;
&lt;h2 id=&#34;csi-container-storage-interface-note&#34;&gt;CSI (Container Storage Interface) Note&lt;/h2&gt;
&lt;p&gt;CSI is the standard method of communication that enables storage drivers to
release on their own schedule. This allows storage vendors to upgrade, update,
and enhance their drivers without the need to update Kubernetes source code, or
follow Kubernetes release cycles.&lt;/p&gt;
&lt;p&gt;CSI is available from Kubernetes 1.9 alpha. CSI is considered GA from
Kubernetes 1.13, hence StorageOS recommends the use of CSI. In addition, the
StorageOS Cluster Operator handles the configuration of the CSI driver and its
complexity by detecting the version of the Kubernetes installed.&lt;/p&gt;
&lt;p&gt;Check out the status of the CSI release cycle in relation with Kubernetes in
the &lt;a href=&#34;https://kubernetes-csi.github.io/docs/&#34;&gt;CSI project&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;CSI communication is fully supported by StorageOS if the cluster is deployed
with any &lt;a href=&#34;/docs/prerequisites/systemconfiguration#distribution-specifics&#34;&gt;supported Linux
Distribution&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;docker&#34;&gt;Docker&lt;/h2&gt;
&lt;p&gt;Some managed Kubernetes platforms enable the &amp;lsquo;Live-Restore&amp;rsquo; Docker feature,
enabling containers to continue running while Docker is stopped or upgraded.
This feature can cause nodes to hang while shutting-down or rebooting, as
rather than going through an orderly shutdown, StorageOS (and other processes)
are killed before the disks are synced and unmounted.  Devices in this
inaccessible state will log a warning similar to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Transport endpoint not connected
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To prevent this behaviour, we advise disabling this feature by setting&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    ...
    &amp;quot;live-restore&amp;quot;: false
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;in &lt;code&gt;/etc/docker/daemon.json&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s an example Ansible snippet that might achieve this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
- name: configure /etc/docker/daemon.json
  lineinfile:
      path: /etc/docker/daemon.json
      regexp: &#39;^.*&amp;quot;live-restore&amp;quot;: true,$&#39;
      line: &#39;  &amp;quot;live-restore&amp;quot;: false,&#39;
      backrefs: yes
  notify: restart docker
...
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: Use at own risk; you may need to adapt the example to work in your
environment&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Docker Enterprise Edition</title>
      <link>/docs/platforms/dockeree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/platforms/dockeree/</guid>
      <description>
        
        
        &lt;p&gt;This section of documentation covers the use of StorageOS in Docker Enterprise Edition.&lt;/p&gt;
&lt;p&gt;Docker EE and the Universal Control Plane can run on different Linux
distributions. StorageOS supports RHEL, CentOS, Debian, and selected Ubuntu
images. For more details, check out the supported OS in the
&lt;a href=&#34;/docs/prerequisites/systemconfiguration/&#34;&gt;prerequisites page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;StorageOS only supports Kubernetes nodes managed by Docker Enterprise Edition,
not those running Swarm. Mixed nodes (those running Kubernetes and Swarm
workloads)  are also not supported.  As a consequence, StorageOS volumes can
only be provisioned on Kubernetes nodes, and only these nodes should be used
for stateful workloads.&lt;/p&gt;
&lt;h2 id=&#34;kubernetes-with-storageos&#34;&gt;Kubernetes with StorageOS&lt;/h2&gt;
&lt;p&gt;StorageOS integrates transparently with Kubernetes. The user can provide
standard PVC definitions and StorageOS will dynamically provision them.
StorageOS presents volumes to containers with standard POSIX mount targets.
This enables the Kubelet to mount StorageOS volumes using standard linux device
files. Checkout &lt;a href=&#34;/docs/prerequisites/systemconfiguration/&#34;&gt;device presentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Kubernetes and StorageOS communicate with each other to perform actions such as
creation, deletion or mounting of volumes. The CSI (Container Storage
Interface) driver is the standard communication method. Using CSI, Kubernetes
and StorageOS communicate over a Unix domain socket.&lt;/p&gt;
&lt;p&gt;It is recommended the use of a CSI StorgeOS installation from Kubernetes 1.13
onwards. Even though the former communication procedure, the native driver, is
still in use and StorageOS maintains support for it. Its use is discouraged as
it is a deprecated method, to be removed in newer versions of Kubernetes.&lt;/p&gt;
&lt;h2 id=&#34;csi-container-storage-interface-note&#34;&gt;CSI (Container Storage Interface) Note&lt;/h2&gt;
&lt;p&gt;CSI is the standard method of communication that enables storage drivers to
release on their own schedule. This allows storage vendors to upgrade, update,
and enhance their drivers without the need to update Kubernetes source code, or
follow Kubernetes release cycles.&lt;/p&gt;
&lt;p&gt;CSI is available from Kubernetes 1.9 alpha. CSI is considered GA from
Kubernetes 1.13, hence StorageOS recommends the use of CSI. In addition, the
StorageOS Cluster Operator handles the configuration of the CSI driver and its
complexity by detecting the version of the Kubernetes installed.&lt;/p&gt;
&lt;p&gt;Check out the status of the CSI release cycle in relation with Kubernetes in
the &lt;a href=&#34;https://kubernetes-csi.github.io/docs/&#34;&gt;CSI project&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;CSI communication is fully supported by StorageOS if the cluster is deployed
with any &lt;a href=&#34;/docs/prerequisites/systemconfiguration#distribution-specifics&#34;&gt;supported Linux
Distribution&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: OpenShift</title>
      <link>/docs/platforms/openshift/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/platforms/openshift/</guid>
      <description>
        
        
        &lt;h1 id=&#34;openshift&#34;&gt;OpenShift&lt;/h1&gt;
&lt;p&gt;This section of documentation covers use of the
&lt;a href=&#34;https://www.openshift.com/&#34;&gt;OpenShift&lt;/a&gt; orchestrator from Red Hat. The
StorageOS installation procedure is slightly different depending on the version
you have deployed, so follow the appropriate guide. Other documents in this
section are version agnostic.&lt;/p&gt;
&lt;p&gt;StorageOS integrates transparently with OpenShift. The user can provide
standard PVC definitions and StorageOS will dynamically provision them.
StorageOS presents volumes to containers with standard POSIX mount targets.
This enables the Kubelet to mount StorageOS volumes using standard linux device
files. Checkout &lt;a href=&#34;/docs/prerequisites/systemconfiguration/&#34;&gt;device presentation&lt;/a&gt; for more details.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Rancher</title>
      <link>/docs/platforms/rancher/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/platforms/rancher/</guid>
      <description>
        
        
        &lt;p&gt;This section of documentation covers use of StorageOS in
&lt;a href=&#34;https://www.rancher.com/&#34;&gt;Rancher&lt;/a&gt;. StorageOS can be deployed in any Rancher cluster
that meets the &lt;a href=&#34;/docs/prerequisites/&#34;&gt;StorageOS prerequisites&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;StorageOS transparently supports Rancher deployments using CentOS, RHEL, Debian
or RancherOS (CSI is not supported on RancherOS) and can support other
Linux distributions detailed in the &lt;a href=&#34;/docs/prerequisites/systemconfiguration/&#34;&gt;systems supported page&lt;/a&gt; if the appropriate kernel
modules are present.&lt;/p&gt;
&lt;h2 id=&#34;kubernetes-with-storageos&#34;&gt;Kubernetes with StorageOS&lt;/h2&gt;
&lt;p&gt;StorageOS integrates transparently with Kubernetes. The user can provide
standard PVC definitions and StorageOS will dynamically provision them.
StorageOS presents volumes to containers with standard POSIX mount targets.
This enables the Kubelet to mount StorageOS volumes using standard linux device
files. Checkout &lt;a href=&#34;/docs/prerequisites/systemconfiguration/&#34;&gt;device presentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Kubernetes and StorageOS communicate with each other to perform actions such as
creation, deletion or mounting of volumes. The CSI (Container Storage
Interface) driver is the standard communication method. Using CSI, Kubernetes
and StorageOS communicate over a Unix domain socket.&lt;/p&gt;
&lt;p&gt;It is recommended the use of a CSI StorgeOS installation from Kubernetes 1.13
onwards. Even though the former communication procedure, the native driver, is
still in use and StorageOS maintains support for it. Its use is discouraged as
it is a deprecated method, to be removed in newer versions of Kubernetes.&lt;/p&gt;
&lt;h2 id=&#34;csi-container-storage-interface-note&#34;&gt;CSI (Container Storage Interface) Note&lt;/h2&gt;
&lt;p&gt;CSI is the standard method of communication that enables storage drivers to
release on their own schedule. This allows storage vendors to upgrade, update,
and enhance their drivers without the need to update Kubernetes source code, or
follow Kubernetes release cycles.&lt;/p&gt;
&lt;p&gt;CSI is available from Kubernetes 1.9 alpha. CSI is considered GA from
Kubernetes 1.13, hence StorageOS recommends the use of CSI. In addition, the
StorageOS Cluster Operator handles the configuration of the CSI driver and its
complexity by detecting the version of the Kubernetes installed.&lt;/p&gt;
&lt;p&gt;Check out the status of the CSI release cycle in relation with Kubernetes in
the &lt;a href=&#34;https://kubernetes-csi.github.io/docs/&#34;&gt;CSI project&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;CSI communication is fully supported by StorageOS if the cluster is deployed
with any &lt;a href=&#34;/docs/prerequisites/systemconfiguration#distribution-specifics&#34;&gt;supported Linux
Distribution&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
